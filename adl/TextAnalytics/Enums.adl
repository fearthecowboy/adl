@sealed
enum State {
  notStarted: "NotStarted";
  running: "running";
  succeeded: "succeeded";
  failed: "failed";
  cancelled: "cancelled";
  cancelling: "cancelling";
  partiallyCompleted: "partiallyCompleted";
}

@sealed
enum StringIndexType {
  /// Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
  TextElements_v8: "TextElements_v8";

  /// Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python.
  UnicodeCodePoint: "UnicodeCodePoint";
            
  /// Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript.
  Utf16CodeUnit: "Utf16CodeUnit";        
}

/// The predicted Sentiment for the sentence.
@sealed
enum SentenceSentimentValue {
  positive: "positive";
  neutral: "neutral";
  negative: "negative";
}

/// Aspect level sentiment for the aspect in the sentence.
@sealed
enum TokenSentimentValue {
  positive: "positive";
  mixed: "mixed";
  negative: "negative";
}  

@sealed 
enum AspectRelationType {
  opinion: "opinion";
  aspect: "aspect";
}